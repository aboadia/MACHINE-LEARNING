# -*- coding: utf-8 -*-
"""assignment0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12sfEI0YPjsiUO2oniM3nDmQfXFMoL8Y3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from google.colab import drive 
from google.colab import files
uploaded = files.upload()

from collections import Counter 
file_name = "test.txt"
t=uploaded[file_name].decode("utf-8")
t=uploaded[file_name].decode("utf-8").split("\r\n")
p= [i.replace('\r','') for i in t]
#print(p)
t=' '.join(p)
#print(t)
collection=Counter(t)
collection
del collection[' ']
del collection[',']
print(collection)


#sorting the dictionary  
sortedcollection = dict( sorted(collection.items(), key=lambda x: x[0].lower()) )

# converting to numpy 
a=np.array(list(sortedcollection.keys()))
b=np.array(list(sortedcollection.values()))


import matplotlib.pyplot as plt
# creating barchat from dictionary unnormalized
plt.bar(list(sortedcollection.keys()), sortedcollection.values(), color='g')
plt.title('An unnormalized bar graph of letters against its frequency')
plt.ylabel('Frequency')
plt.xlabel('Letters')
plt.show()

#normalization
total=sum(sortedcollection.values())
result = {key: value /total for key, value in sortedcollection.items()}

# creating barchat from dictionary normalized
plt.bar(list(result.keys()),result.values(), color='g')
plt.title('An normalized bar graph of letters against its frequency')
plt.ylabel('Frequency')
plt.xlabel('Letters')
plt.show()

# question 2A
import cv2
from google.colab import drive 
from google.colab import files
uploaded = files.upload()

img=cv2.imread('test.png')

for row in range(len(img)):
    for col in range(len(img[row])):
        pixel=img[row][col]
    #print(i)
        p=np.linalg.norm(pixel-np.array([255,0,0]))
        q=np.linalg.norm(pixel-np.array([0,255,0]))
        r=np.linalg.norm(pixel-np.array([0,0,255]))
        #print(p)
        min_pix= min([p,q,r])
        #print(min_pix)
        
        if min_pix == p:
            img[row][col]=p
        elif min_pix ==q:
            img[row][col]=q
        elif min_pix==r:
            img[row][col]=r
            
cv2.imwrite('output1.png',img)

# question 2B.
img=cv2.imread('test.png')
cv2.rectangle(img,pt1=(39,89),pt2=(89,39),color=(0,0,0), thickness=-1)
cv2.imwrite('output2.png',img)

# question 3
a=np.array([[3,3],[4,2]])
b=np.array([11.25,10])
np.linalg.solve(a,b)